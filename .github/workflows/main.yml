---
name: Release

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          

      - name: Install Poetry
        with:
          cache: 'pip'
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        with:
          cache: 'poetry'
        run: |
          poetry install --no-root --all-extras

  code-style:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        with:
          cache: 'pip'
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        with:
          cache: 'poetry'
        run: |
          poetry install --no-root --all-extras

      - name: Run code style
        run: |
          poetry run ruff format --check insightful_routines/

  build:
    runs-on: ubuntu-latest
    needs: code-style
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        with:
          cache: 'pip'
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        with:
          cache: 'poetry'
        run: |
          poetry install --no-root --all-extras

      - name: Build project
        run: |
          poetry build

  release:
      runs-on: ubuntu-latest
      needs: build

      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semantic-release.outputs.version }}
          release_name: Release ${{ steps.semantic-release.outputs.version }}
          draft: false
          prerelease: false

      - name: Publish package distributions to GitHub Releases
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/upload-to-gh-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
